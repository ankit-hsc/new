// Generated by delombok at Tue Mar 06 12:22:48 IST 2018
/*
Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). 
You may not use this file except in compliance with the License. 
A copy of the License is located at

   http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. 
This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and limitations under the License.
*/
package com.amazonaws.kinesisvideo.parser.utilities;

import com.amazonaws.kinesisvideo.parser.mkv.MkvElement;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.util.List;
import java.util.Optional;
import java.util.OptionalLong;

/**
 * Class that captures the meta-data for a particular track in the mkv response.
 */
public class MkvTrackMetadata {
    private BigInteger trackNumber;
    private Optional<BigInteger> trackUID;
    private String trackName;
    private String codecId;
    private String codecName;
    private ByteBuffer codecPrivateData;
    private Optional<BigInteger> pixelWidth;
    private Optional<BigInteger> pixelHeight;
    private List<MkvElement> allElementsInTrack;

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static Optional<BigInteger> $default$trackUID() {
        return Optional.empty();
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static String $default$trackName() {
        return "";
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static String $default$codecId() {
        return "";
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static String $default$codecName() {
        return "";
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static Optional<BigInteger> $default$pixelWidth() {
        return Optional.empty();
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private static Optional<BigInteger> $default$pixelHeight() {
        return Optional.empty();
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class MkvTrackMetadataBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private BigInteger trackNumber;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private boolean trackUID$set;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Optional<BigInteger> trackUID;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private boolean trackName$set;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String trackName;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private boolean codecId$set;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String codecId;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private boolean codecName$set;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String codecName;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private ByteBuffer codecPrivateData;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private boolean pixelWidth$set;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Optional<BigInteger> pixelWidth;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private boolean pixelHeight$set;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Optional<BigInteger> pixelHeight;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private List<MkvElement> allElementsInTrack;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        MkvTrackMetadataBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder trackNumber(final BigInteger trackNumber) {
            this.trackNumber = trackNumber;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder trackUID(final Optional<BigInteger> trackUID) {
            this.trackUID = trackUID;
            trackUID$set = true;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder trackName(final String trackName) {
            this.trackName = trackName;
            trackName$set = true;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder codecId(final String codecId) {
            this.codecId = codecId;
            codecId$set = true;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder codecName(final String codecName) {
            this.codecName = codecName;
            codecName$set = true;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder codecPrivateData(final ByteBuffer codecPrivateData) {
            this.codecPrivateData = codecPrivateData;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder pixelWidth(final Optional<BigInteger> pixelWidth) {
            this.pixelWidth = pixelWidth;
            pixelWidth$set = true;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder pixelHeight(final Optional<BigInteger> pixelHeight) {
            this.pixelHeight = pixelHeight;
            pixelHeight$set = true;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadataBuilder allElementsInTrack(final List<MkvElement> allElementsInTrack) {
            this.allElementsInTrack = allElementsInTrack;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MkvTrackMetadata build() {
            return new MkvTrackMetadata(trackNumber, trackUID$set ? trackUID : MkvTrackMetadata.$default$trackUID(), trackName$set ? trackName : MkvTrackMetadata.$default$trackName(), codecId$set ? codecId : MkvTrackMetadata.$default$codecId(), codecName$set ? codecName : MkvTrackMetadata.$default$codecName(), codecPrivateData, pixelWidth$set ? pixelWidth : MkvTrackMetadata.$default$pixelWidth(), pixelHeight$set ? pixelHeight : MkvTrackMetadata.$default$pixelHeight(), allElementsInTrack);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "MkvTrackMetadata.MkvTrackMetadataBuilder(trackNumber=" + this.trackNumber + ", trackUID=" + this.trackUID + ", trackName=" + this.trackName + ", codecId=" + this.codecId + ", codecName=" + this.codecName + ", codecPrivateData=" + this.codecPrivateData + ", pixelWidth=" + this.pixelWidth + ", pixelHeight=" + this.pixelHeight + ", allElementsInTrack=" + this.allElementsInTrack + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static MkvTrackMetadataBuilder builder() {
        return new MkvTrackMetadataBuilder();
    }

    @java.beans.ConstructorProperties({"trackNumber", "trackUID", "trackName", "codecId", "codecName", "codecPrivateData", "pixelWidth", "pixelHeight", "allElementsInTrack"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    private MkvTrackMetadata(final BigInteger trackNumber, final Optional<BigInteger> trackUID, final String trackName, final String codecId, final String codecName, final ByteBuffer codecPrivateData, final Optional<BigInteger> pixelWidth, final Optional<BigInteger> pixelHeight, final List<MkvElement> allElementsInTrack) {
        this.trackNumber = trackNumber;
        this.trackUID = trackUID;
        this.trackName = trackName;
        this.codecId = codecId;
        this.codecName = codecName;
        this.codecPrivateData = codecPrivateData;
        this.pixelWidth = pixelWidth;
        this.pixelHeight = pixelHeight;
        this.allElementsInTrack = allElementsInTrack;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public BigInteger getTrackNumber() {
        return this.trackNumber;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Optional<BigInteger> getTrackUID() {
        return this.trackUID;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getTrackName() {
        return this.trackName;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCodecId() {
        return this.codecId;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCodecName() {
        return this.codecName;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public ByteBuffer getCodecPrivateData() {
        return this.codecPrivateData;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Optional<BigInteger> getPixelWidth() {
        return this.pixelWidth;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Optional<BigInteger> getPixelHeight() {
        return this.pixelHeight;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<MkvElement> getAllElementsInTrack() {
        return this.allElementsInTrack;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "MkvTrackMetadata(trackNumber=" + this.getTrackNumber() + ", trackUID=" + this.getTrackUID() + ", trackName=" + this.getTrackName() + ", codecId=" + this.getCodecId() + ", codecName=" + this.getCodecName() + ", pixelWidth=" + this.getPixelWidth() + ", pixelHeight=" + this.getPixelHeight() + ")";
    }
}
